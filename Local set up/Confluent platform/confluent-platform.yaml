apiVersion: platform.confluent.io/v1beta1
# this will install kafka brokers as controllers, you can notice that it has the same image as Kafka.
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 5Gi
  image:
    application: docker.io/confluentinc/cp-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  dependencies:
    kRaftController:
      clusterRef:
        name: kraftcontroller
  dataVolumeCapacity: 5Gi
  image:
    application: docker.io/confluentinc/cp-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
# Confluent Connect Server for handling sinks and sources
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  build:
    type: onDemand
    onDemand:
      # Here we can add connectors, e.g. The Official Mongo one
      plugins:
        locationType: confluentHub
        confluentHub:
          - name: kafka-connect-mongodb
            owner: mongodb
            version: 1.11.1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
---
apiVersion: platform.confluent.io/v1beta1
# The ksqlDB instance for processing ksql queries, tables and streams
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 5Gi
---
apiVersion: platform.confluent.io/v1beta1
# Basically, a web UI to manage all components
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 5Gi
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
      - name: ksqldb
        url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
      - name: connect
        url: http://connect.confluent.svc.cluster.local:8083
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-schema-registry:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
---
apiVersion: platform.confluent.io/v1beta1
# RESTful interface to cluster, producing and consuming messages
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
---
apiVersion: platform.confluent.io/v1beta1
# Admin REST Class for managing internal communication, e.g. for KafkaTopic custom resource (CR)
kind: KafkaRestClass
metadata:
  name: krc-cfk
  namespace: confluent
spec:
  kafkaClusterRef:
    name: kafka
  kafkaRest:
    endpoint: http://kafka.confluent.svc.cluster.local:8090
